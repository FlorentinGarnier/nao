<?php

namespace Gsquad\PiafBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * PiafRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PiafRepository extends EntityRepository
{
    public function fetchAllNomVern(){
        $query = $this
                    ->createQueryBuilder('v')
                    ->select('v.nameVern')
                    ->orderBy('v.nameVern', 'ASC')
                    ->getQuery()
        ;

        return $query->getResult();
    }

    public function fetchAllNomVernLbNom(){
        $query = $this
            ->createQueryBuilder('p')
            ->select('p.nameVern', 'p.lbNom')
            ->getQuery()
        ;

        return $query->getResult();
    }

    public function fetchAllNomVernLbNomObservedPiaf(){
        $query = $this
            ->createQueryBuilder('p')
            ->select('p.nameVern', 'p.lbNom')
            ->where('p.nbObservations > :observations')
            ->setParameter('observations', 0)
            ->orderBy('p.nbObservations', 'ASC')
            ->getQuery();
        ;

        return $query->getResult();
    }

    public function findAllObservedPiaf() {
        $query = $this->createQueryBuilder('p')
            ->where('p.nbObservations > :observations')
            ->setParameter('observations', 0)
            ->orderBy('p.nbObservations', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    public function findObservedPiafBy($espece) {
        $term1 = $espece;
        $term2 = $espece . " ";

        $query = $this->createQueryBuilder('p')
            ->where('p.nbObservations > :observations')
            ->andWhere("p.nameVern = :term1 OR p.nameVern = :term2")
            ->setParameter('observations', 0)
            ->setParameter('term1', $term1)
            ->setParameter('term2', $term2)
            ->orderBy('p.nbObservations', 'ASC')
            ->getQuery();

        return $query->getResult();
    }

    public function fetchAllWith($attr) {
        $query = $this->createQueryBuilder('p');

        $query = $query
            ->where("p.nameVern = :term OR p.lbNom = :term")
            ->setParameter('term', $attr[0]);


        if(count($attr) > 1) {
            for($i = 1; $i < count($attr); $i++) {
                $query
                    ->orWhere('p.nameVern = :term'.$i.' OR p.lbNom = :term'.$i)
                    ->setParameter('term'.$i, $attr[$i]);
            }
        }

        $query = $query
            ->orderBy('p.nbObservations', 'ASC')
            ->getQuery();

        return $query->getResult();
    }
}
